{"version":3,"sources":["components/Actionbar.js","components/Logo.js","App.js","reportWebVitals.js","index.js"],"names":["Actionbar","buttons","className","role","map","button","idx","Component","component","label","type","onClick","Logo","height","style","defaultProps","IconButton","App","actionbarClick","arg","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPA4BeA,MA1Bf,YAAiC,IAAZC,EAAW,EAAXA,QACnB,OACE,qBAAKC,UAAU,gBAAgBC,KAAK,QAApC,SAEIF,EAAQG,KAAI,SAACC,EAAQC,GAAS,IACTC,EAAqBF,EAAhCG,UAAsBC,EAAUJ,EAAVI,MAC9B,OACE,wBAEEC,KAAK,SACLR,UAAU,gCACVS,QAASN,EAAOM,QAJlB,SAMIJ,GAAa,cAACA,EAAD,KAAkBE,GAL5BH,SCRnB,SAASM,EAAT,GAA2B,IAAXC,EAAU,EAAVA,OACd,OACE,qBAAKC,MAAO,CAAED,OAAO,GAAD,OAAKA,EAAL,OAAmBX,UAAU,aAIrDU,EAAKG,aAAe,CAClBF,OAAQ,IAOKD,QCRTI,EAAa,kBAAO,mBAAGd,UAAU,6BA0BxBe,MAxBf,WAEE,IAAMC,EAAiB,SAACC,GAAD,OAAS,kBAAMC,QAAQC,IAAI,qBAAsBF,KAElElB,EAAU,CACd,CAAEQ,MAAO,UAAWE,QAASO,EAAe,IAC5C,CAAET,MAAO,UAAWE,QAASO,EAAe,IAC5C,CAAET,MAAO,UAAWE,QAASO,EAAe,IAC5C,CAAEV,UAAWQ,EAAYL,QAASO,EAAe,UAGnD,OACE,gCACE,cAAC,EAAD,IACA,wDACA,uBACA,4CACA,cAAC,EAAD,CACEjB,QAASA,QChBFqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e1b91665.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nfunction Actionbar({ buttons }) {\n  return (\n    <div className=\"uib-actionbar\" role=\"group\">\n      {\n        buttons.map((button, idx) => {\n          const { component: Component, label } = button;\n          return (\n            <button\n              key={idx}\n              type=\"button\"\n              className=\"uib-button uib-button--action\"\n              onClick={button.onClick}\n            >\n              {(Component && <Component />) || label}\n            </button>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nActionbar.propTypes = {\n  buttons: PropTypes.arrayOf(PropTypes.shape).isRequired,\n}\n\nexport default Actionbar;\n","import PropTypes from 'prop-types';\n\nfunction Logo({ height }) {\n  return (\n    <div style={{ height: `${height}px` }} className=\"uib-logo\" />\n  );\n}\n\nLogo.defaultProps = {\n  height: 40,\n};\n\nLogo.propTypes = {\n  height: PropTypes.number,\n};\n\nexport default Logo;\n","import React from 'react';\n\nimport './css/drager-theme-bright.css';\nimport './css/uib-iconfont.css';\n\nimport Actionbar from 'components/Actionbar';\nimport Logo from 'components/Logo';\n\nconst IconButton = () => (<i className=\"uib-icon uib-icon--save\" />);\n\nfunction App() {\n\n  const actionbarClick = (arg) => () => console.log('Actionbar clicked ', arg);\n\n  const buttons = [\n    { label: 'button1', onClick: actionbarClick(1) },\n    { label: 'button2', onClick: actionbarClick(2) },\n    { label: 'button3', onClick: actionbarClick(3) },\n    { component: IconButton, onClick: actionbarClick('save') },\n  ];\n\n  return (\n    <div>\n      <Logo />\n      <h1>UIB Component Showcase</h1>\n      <hr/>\n      <h3>Actionbar:</h3>\n      <Actionbar\n        buttons={buttons}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}